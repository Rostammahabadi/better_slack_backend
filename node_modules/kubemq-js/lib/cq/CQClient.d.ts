import { KubeMQClient } from '../client/KubeMQClient';
import { Config } from '../client/config';
import { CQChannel } from '../common/channel_stats';
import { QueriesMessage, QueriesResponse, QueriesSubscriptionRequest } from './queryTypes';
import { CommandsMessage, CommandsResponse, CommandsSubscriptionRequest } from './commandTypes';
export declare class CQClient extends KubeMQClient {
    constructor(Options: Config);
    sendCommandRequest(msg: CommandsMessage): Promise<CommandsResponse>;
    sendQueryRequest(msg: QueriesMessage): Promise<QueriesResponse>;
    sendCommandResponseMessage(msg: CommandsResponse): Promise<void>;
    sendQueryResponseMessage(msg: QueriesResponse): Promise<void>;
    createCommandsChannel(channelName: string): Promise<void>;
    createQueriesChannel(channelName: string): Promise<void>;
    deleteCommandsChannel(channelName: string): Promise<void>;
    deleteQueriesChannel(channelName: string): Promise<void>;
    listCommandsChannels(search: string): Promise<CQChannel[]>;
    listQueriesChannels(search: string): Promise<CQChannel[]>;
    subscribeToCommands(request: CommandsSubscriptionRequest): Promise<void>;
    subscribeToQueries(request: QueriesSubscriptionRequest): Promise<void>;
}
//# sourceMappingURL=CQClient.d.ts.map